{"id":"apis/dash/types.ts","dependencies":[{"name":"/home/prosset/Documents/Canal+/rx-player/tsconfig.json","includedInParent":true,"mtime":1567699906905},{"name":"/home/prosset/Documents/Canal+/rx-player/package.json","includedInParent":true,"mtime":1571390912278}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2019 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Quality;\n\n(function (Quality) {\n  Quality[\"HIGH\"] = \"HIGH\";\n  Quality[\"MEDIUM\"] = \"MEDIUM\";\n  Quality[\"LOW\"] = \"LOW\";\n})(Quality = exports.Quality || (exports.Quality = {}));"},"sourceMaps":{"js":{"mappings":[{"source":"apis/dash/types.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":21,"column":0}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":21,"column":4}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":21,"column":11}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":23,"column":0}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":23,"column":1}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":23,"column":11}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":23,"column":18}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":19},"generated":{"line":23,"column":20}},{"source":"apis/dash/types.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":24,"column":0}},{"source":"apis/dash/types.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":24,"column":2}},{"source":"apis/dash/types.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":24,"column":9}},{"source":"apis/dash/types.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":24,"column":10}},{"source":"apis/dash/types.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":24,"column":16}},{"source":"apis/dash/types.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":24,"column":17}},{"source":"apis/dash/types.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":24,"column":20}},{"source":"apis/dash/types.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":24,"column":26}},{"source":"apis/dash/types.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":25,"column":0}},{"source":"apis/dash/types.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":25,"column":2}},{"source":"apis/dash/types.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":25,"column":9}},{"source":"apis/dash/types.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":25,"column":10}},{"source":"apis/dash/types.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":25,"column":18}},{"source":"apis/dash/types.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":25,"column":19}},{"source":"apis/dash/types.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":25,"column":22}},{"source":"apis/dash/types.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":25,"column":30}},{"source":"apis/dash/types.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":26,"column":0}},{"source":"apis/dash/types.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":26,"column":2}},{"source":"apis/dash/types.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":26,"column":9}},{"source":"apis/dash/types.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":26,"column":10}},{"source":"apis/dash/types.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":26,"column":15}},{"source":"apis/dash/types.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":26,"column":16}},{"source":"apis/dash/types.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":26,"column":19}},{"source":"apis/dash/types.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":26,"column":24}},{"source":"apis/dash/types.ts","name":null,"original":{"line":53,"column":1},"generated":{"line":27,"column":0}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":27,"column":1}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":27,"column":3}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":19},"generated":{"line":27,"column":10}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":27,"column":13}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":27,"column":20}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":27,"column":21}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":27,"column":28}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":27,"column":33}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":27,"column":40}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":27,"column":41}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":27,"column":48}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":19},"generated":{"line":27,"column":51}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":27,"column":53}},{"source":"apis/dash/types.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":27,"column":54}}],"sources":{"apis/dash/types.ts":"/**\n * Copyright 2019 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AsyncSubject,\n  ReplaySubject,\n  Subscription,\n  Subject,\n  Observable,\n  ConnectableObservable,\n} from \"rxjs\";\n\nimport { IKeySystemOption } from \"../../../../../core/eme/types\";\nimport Manifest, {\n  ISegment,\n  Period,\n  Adaptation,\n  Representation,\n} from \"../../../../../manifest\";\nimport { ISidxSegment } from \"../../../../../parsers/containers/isobmff\";\nimport {\n  IProgressBarBuilderAbstract,\n  ISettingsDownloader,\n  IVideoSettingsQualityInputType,\n} from \"../../types\";\nimport { ITypedArray } from \"../drm/keySystems\";\n\nexport interface IRepresentation {\n  segmentBase: { indexRange: [number, number] | never[] };\n  initialization: {\n    range: [number, number] | never[];\n    mediaURL: string | null;\n  };\n}\n\nexport enum Quality {\n  HIGH = \"HIGH\",\n  MEDIUM = \"MEDIUM\",\n  LOW = \"LOW\",\n}\n\nexport interface ISegmentsBuiltType {\n  data: ArrayBuffer;\n  duration: number;\n  timescale: number;\n  time: number;\n}\n\nexport interface IOptionsBuilder {\n  quality: [number, number] | IVideoSettingsQualityInputType;\n  contentID: string;\n  keySystemsOptions?: IKeySystemOption;\n}\n\nexport interface ILoaderBuilder {\n  id: string;\n  contentID: string;\n  duration?: number;\n  codecs?: string;\n  keySystemsOptions?: IKeySystemOption;\n  type: string;\n}\n\nexport interface IEmitterLoaderBuilder {\n  id: string;\n  segmentDownloaded: number;\n  totalSegments?: number;\n  size?: number;\n}\n\nexport interface IProgressBarBuilder {\n  progress: number;\n  overall: number;\n  downloadedID: string[];\n}\n\nexport interface IVideoSettings {\n  quality: [number, number] | IVideoSettingsQualityInputType;\n  keySystems?: IKeySystemOption;\n}\n\nexport interface ILocalIndexSegmentOnline {\n  duration: number;\n  time: number;\n  timescale: number;\n  data: ArrayBuffer | Uint8Array;\n  size: number;\n}\n\nexport interface ILocalIndexOnline {\n  init?: string | null;\n  segments: Array<ISegmentBuilder | ISegmentBuilt>;\n}\n\nexport interface ILocalRepresentationOnline {\n  bitrate: number;\n  mimeType: string;\n  codecs: string;\n  width?: number;\n  height?: number;\n  id: string;\n  index: ILocalIndexOnline;\n}\n\nexport interface ILocalAdaptationOnline {\n  type: string;\n  audioDescription?: boolean;\n  closedCaption?: boolean;\n  language?: string;\n  representations: ILocalRepresentationOnline[];\n}\n\nexport interface ILocalPeriodOnline {\n  start: number;\n  duration: number;\n  adaptations: ILocalAdaptationOnline[];\n}\n\nexport interface ILocalManifestOnline {\n  version: string;\n  duration: number;\n  periods: ILocalPeriodOnline[];\n  isFinished: boolean;\n}\n\nexport interface ISegmentIndexBuilder {\n  init: string;\n  segments: ISegmentBuilder[];\n}\n\nexport interface ISegmentBuilder {\n  segment: ISidxSegment | ISegment;\n  utils: {\n    type: \"TemplateRepresentationIndex\" | \"BaseRepresentationIndex\";\n    id: string;\n    contentID: string;\n    url: string;\n    segmentKey: [string, number];\n  };\n}\n\nexport type ISegmentBuilt = [[string, number], number, number, number];\n\nexport type ISegmentIndex =\n  | {\n      dataInit: ITypedArray | ArrayBuffer;\n      mediaURL: string | null;\n      nextSegmentsRanges?: ISegment[];\n      duration?: number;\n      type: \"TemplateRepresentationIndex\";\n    }\n  | {\n      dataInit: ITypedArray | ArrayBuffer;\n      mediaURL: string | null;\n      duration: number;\n      nextSegmentsRanges: ISidxSegment[] | null;\n      type: \"BaseRepresentationIndex\";\n    };\n\nexport interface IDownloadManagerOutput {\n  manifest: ILocalManifestOnline;\n  size: number;\n  progress: number;\n  progressBarBuilder: IProgressBarBuilder;\n}\n\nexport type ISettings =\n  | ISettingsDownloader\n  | {\n      contentID: string;\n      rxpManifest: ILocalManifestOnline;\n      type: \"resume\";\n      metaData?: {\n        [prop: string]: any;\n      };\n    };\n\nexport interface IActiveSubs {\n  [contentID: string]: Subscription;\n}\n\nexport interface IPauseSubject {\n  [contentID: string]: AsyncSubject<void>;\n}\n\nexport interface IDownloaderManagerAbstract {\n  settings: ISettings;\n  activeSubsDownloader: IActiveSubs;\n  progress$: ReplaySubject<IProgressBarBuilderAbstract>;\n  pause$: AsyncSubject<void>;\n  progressBuilder$: Subject<{ nextSegments: ISegment[]; id: number | string }>;\n  progressNew$: Subject<{\n    progress: number;\n    size: number;\n    nextSegmentsToDownload: ISegment[];\n    contentType: \"video\" | \"audio\" | \"text\";\n    id: string;\n  }>;\n  // progressSetupUnsubFn: any;\n}\n\nexport interface IProgressBarBuilderDownload {\n  size: number;\n  progressBarBuilder: IProgressBarBuilder;\n  progress$: ReplaySubject<IProgressBarBuilderAbstract>;\n  pause$: AsyncSubject<void>;\n  activeSubsDownloader: IActiveSubs;\n}\n\nexport interface IContext {\n  manifest: Manifest;\n  period: Period;\n  adaptation: Adaptation;\n  representation: Representation;\n  segment: ISegment;\n}\nexport interface IContextUniq {\n  representation: Representation;\n  adaptation: Adaptation;\n  segment: ISegment;\n}\n\nexport interface IContextBuilder {\n  period: Period;\n  contexts: IContextUniq[];\n}\n\nexport interface IGlobalContext {\n  video: IContextBuilder[];\n  audio: IContextBuilder[];\n  text: IContextBuilder[];\n  manifest: Manifest;\n}\n"},"lineCount":null}},"error":null,"hash":"3fd11ca3ca44610419e459770e90c8a5","cacheData":{"env":{}}}