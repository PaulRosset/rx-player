{"id":"../../../transports/utils/byte_range.ts","dependencies":[{"name":"/home/prosset/Documents/Canal+/rx-player/tsconfig.json","includedInParent":true,"mtime":1567699906905},{"name":"/home/prosset/Documents/Canal+/rx-player/package.json","includedInParent":true,"mtime":1571390912278}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2015 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Returns text-formatted byteRange (`bytes=$start-$end?)`\n * @param {Array.<string|Number>} arr\n * @returns {string}\n */\n\nfunction byteRange(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      start = _ref2[0],\n      end = _ref2[1];\n\n  return end === Infinity ? \"bytes=\" + +start + \"-\" : \"bytes=\" + +start + \"-\" + +end;\n}\n\nexports.default = byteRange;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":24},"generated":{"line":35,"column":9}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":35,"column":18}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":65},"generated":{"line":35,"column":25}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":65},"generated":{"line":36,"column":0}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":65},"generated":{"line":37,"column":0}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":35},"generated":{"line":37,"column":6}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":65},"generated":{"line":37,"column":11}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":65},"generated":{"line":38,"column":0}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":42},"generated":{"line":38,"column":6}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":65},"generated":{"line":38,"column":9}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":40,"column":0}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":9},"generated":{"line":40,"column":9}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":12},"generated":{"line":40,"column":12}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":17},"generated":{"line":40,"column":17}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":9},"generated":{"line":40,"column":25}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":29},"generated":{"line":40,"column":28}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":41},"generated":{"line":40,"column":39}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":42},"generated":{"line":40,"column":40}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":29},"generated":{"line":40,"column":45}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":51},"generated":{"line":40,"column":48}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":9},"generated":{"line":40,"column":51}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":24,"column":29},"generated":{"line":40,"column":54}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":24,"column":41},"generated":{"line":40,"column":65}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":24,"column":42},"generated":{"line":40,"column":66}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":24,"column":29},"generated":{"line":40,"column":71}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":24,"column":51},"generated":{"line":40,"column":74}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":24,"column":29},"generated":{"line":40,"column":77}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":24,"column":58},"generated":{"line":40,"column":80}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":24,"column":59},"generated":{"line":40,"column":81}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":40,"column":84}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":41,"column":0}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":43,"column":7}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":43,"column":8}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":43,"column":15}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":43,"column":18}},{"source":"../../../transports/utils/byte_range.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":43,"column":27}}],"sources":{"../../../transports/utils/byte_range.ts":"/**\n * Copyright 2015 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns text-formatted byteRange (`bytes=$start-$end?)`\n * @param {Array.<string|Number>} arr\n * @returns {string}\n */\nexport default function byteRange([start, end] : [number, number]) : string {\n  return end === Infinity ?  \"bytes=\" + (+start) + \"-\" :\n                             \"bytes=\" + (+start) + \"-\" + (+end);\n}\n"},"lineCount":null}},"error":null,"hash":"c74991e9ff74a23a4c0d7570ce8cfa45","cacheData":{"env":{}}}