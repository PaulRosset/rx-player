{"id":"../../../utils/simple_set.ts","dependencies":[{"name":"/home/prosset/Documents/Canal+/rx-player/tsconfig.json","includedInParent":true,"mtime":1567699906905},{"name":"/home/prosset/Documents/Canal+/rx-player/package.json","includedInParent":true,"mtime":1571390912278}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2015 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Simple hash-based set.\n * @class SimpleSet\n */\n\nvar SimpleSet =\n/*#__PURE__*/\nfunction () {\n  function SimpleSet() {\n    _classCallCheck(this, SimpleSet);\n\n    this._hashes = {};\n  }\n  /**\n   * Add a new hash entry in the set.\n   * Do not have any effect on already-added hashes\n   * @param {string|number} x\n   */\n\n\n  _createClass(SimpleSet, [{\n    key: \"add\",\n    value: function add(x) {\n      this._hashes[x] = true;\n    }\n    /**\n     * Remove an hash entry from the set.\n     * Do not have any effect on already-removed or inexistant hashes\n     * @param {string|number} x\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(x) {\n      delete this._hashes[x];\n    }\n    /**\n     * Test if the given hash has an entry in the set.\n     * @param {string|number} x\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"test\",\n    value: function test(x) {\n      return !!this._hashes[x];\n    }\n    /**\n     * Returns true if there's currently no hash in this set.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !Object.keys(this._hashes).length;\n    }\n  }]);\n\n  return SimpleSet;\n}();\n\nexports.default = SimpleSet;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":21,"column":21},"generated":{"line":32,"column":4}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":35,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":35,"column":23}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":36,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":38,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":38,"column":9}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":38,"column":16}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":38,"column":19}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":38,"column":21}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":31,"column":3},"generated":{"line":39,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":40,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":49,"column":24}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":38,"column":30},"generated":{"line":49,"column":27}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":50,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":39,"column":9},"generated":{"line":50,"column":11}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":50,"column":18}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":39,"column":17},"generated":{"line":50,"column":19}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":50,"column":20}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":50,"column":24}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":50,"column":28}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":40,"column":3},"generated":{"line":51,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":52,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":47,"column":16},"generated":{"line":60,"column":27}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":47,"column":33},"generated":{"line":60,"column":30}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":61,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":48,"column":11},"generated":{"line":61,"column":13}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":48,"column":16},"generated":{"line":61,"column":18}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":48,"column":11},"generated":{"line":61,"column":25}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":48,"column":24},"generated":{"line":61,"column":26}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":48,"column":11},"generated":{"line":61,"column":27}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":61,"column":28}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":49,"column":3},"generated":{"line":62,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":63,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":56,"column":14},"generated":{"line":71,"column":25}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":56,"column":31},"generated":{"line":71,"column":28}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":72,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":57,"column":11},"generated":{"line":72,"column":13}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":57,"column":12},"generated":{"line":72,"column":14}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":72,"column":15}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":57,"column":18},"generated":{"line":72,"column":20}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":72,"column":27}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":57,"column":26},"generated":{"line":72,"column":28}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":72,"column":29}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":72,"column":30}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":58,"column":3},"generated":{"line":73,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":74,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":64,"column":16},"generated":{"line":81,"column":30}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":82,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":11},"generated":{"line":82,"column":13}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":12},"generated":{"line":82,"column":14}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":18},"generated":{"line":82,"column":20}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":19},"generated":{"line":82,"column":21}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":12},"generated":{"line":82,"column":25}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":24},"generated":{"line":82,"column":26}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":29},"generated":{"line":82,"column":31}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":12},"generated":{"line":82,"column":38}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":38},"generated":{"line":82,"column":40}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":82,"column":46}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":66,"column":3},"generated":{"line":83,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":89,"column":7}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":89,"column":8}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":89,"column":15}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":89,"column":18}},{"source":"../../../utils/simple_set.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":89,"column":27}}],"sources":{"../../../utils/simple_set.ts":"/**\n * Copyright 2015 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple hash-based set.\n * @class SimpleSet\n */\nexport default class SimpleSet {\n  /**\n   * Hashes currently stored\n   * @type {Object}\n   * @private\n   */\n  private _hashes : Partial<Record<string, true>>;\n\n  constructor() {\n    this._hashes = {};\n  }\n\n  /**\n   * Add a new hash entry in the set.\n   * Do not have any effect on already-added hashes\n   * @param {string|number} x\n   */\n  public add(x : string|number) : void {\n    this._hashes[x] = true;\n  }\n\n  /**\n   * Remove an hash entry from the set.\n   * Do not have any effect on already-removed or inexistant hashes\n   * @param {string|number} x\n   */\n  public remove(x : string|number) : void {\n    delete this._hashes[x];\n  }\n\n  /**\n   * Test if the given hash has an entry in the set.\n   * @param {string|number} x\n   * @returns {boolean}\n   */\n  public test(x : string|number) : boolean {\n    return !!this._hashes[x];\n  }\n\n  /**\n   * Returns true if there's currently no hash in this set.\n   * @returns {boolean}\n   */\n  public isEmpty() : boolean {\n    return !Object.keys(this._hashes).length;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"456aa8c6a6797f03f387123025f11fc3","cacheData":{"env":{}}}