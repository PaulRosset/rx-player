{"id":"../../../errors/assertion_error.ts","dependencies":[{"name":"/home/prosset/Documents/Canal+/rx-player/tsconfig.json","includedInParent":true,"mtime":1567699906905},{"name":"/home/prosset/Documents/Canal+/rx-player/package.json","includedInParent":true,"mtime":1571390912278}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2015 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Error due to an abnormal assertion fails.\n *\n * @class AssertionError\n * @extends Error\n */\n\nvar AssertionError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AssertionError, _Error);\n\n  /**\n   * @param {string} message\n   */\n  function AssertionError(message) {\n    var _this;\n\n    _classCallCheck(this, AssertionError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this)); // @see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n\n    Object.setPrototypeOf(_assertThisInitialized(_this), AssertionError.prototype);\n    _this.name = \"AssertionError\";\n    _this.message = message;\n    return _this;\n  }\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n\nexports.default = AssertionError;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":23,"column":21},"generated":{"line":50,"column":4}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":55,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":58,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":30,"column":14},"generated":{"line":58,"column":26}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":58,"column":33}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":58,"column":35}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":59,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":61,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":63,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":63,"column":89}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":63,"column":90}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":65,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":65,"column":4}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":65,"column":10}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":65,"column":11}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":65,"column":25}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":33,"column":32},"generated":{"line":65,"column":57}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":33,"column":46},"generated":{"line":65,"column":71}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":33,"column":47},"generated":{"line":65,"column":72}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":65,"column":81}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":66,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":66,"column":10}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":66,"column":14}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":35,"column":16},"generated":{"line":66,"column":17}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":66,"column":33}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":67,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":67,"column":10}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":67,"column":17}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":67,"column":20}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":67,"column":27}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":68,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":37,"column":3},"generated":{"line":69,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":23,"column":44},"generated":{"line":72,"column":19}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":74,"column":7}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":74,"column":8}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":74,"column":15}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":74,"column":18}},{"source":"../../../errors/assertion_error.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":74,"column":32}}],"sources":{"../../../errors/assertion_error.ts":"/**\n * Copyright 2015 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error due to an abnormal assertion fails.\n *\n * @class AssertionError\n * @extends Error\n */\nexport default class AssertionError extends Error {\n  public readonly name : \"AssertionError\";\n  public readonly message : string;\n\n  /**\n   * @param {string} message\n   */\n  constructor(message : string) {\n    super();\n    // @see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    Object.setPrototypeOf(this, AssertionError.prototype);\n\n    this.name = \"AssertionError\";\n    this.message = message;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"e11ed6aeb2e875d561e8088835d9c382","cacheData":{"env":{}}}