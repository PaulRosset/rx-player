{"id":"../../../parsers/containers/isobmff/create_box.ts","dependencies":[{"name":"/home/prosset/Documents/Canal+/rx-player/tsconfig.json","includedInParent":true,"mtime":1567699906905},{"name":"/home/prosset/Documents/Canal+/rx-player/package.json","includedInParent":true,"mtime":1571390912278},{"name":"../../../utils/byte_parsing","loc":{"line":18,"column":31},"parent":"/home/prosset/Documents/Canal+/rx-player/src/parsers/containers/isobmff/create_box.ts","resolved":"/home/prosset/Documents/Canal+/rx-player/src/utils/byte_parsing.ts"}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2015 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar byte_parsing_1 = require(\"../../../utils/byte_parsing\");\n/**\n * Speed up string to bytes conversion by memorizing the result\n *\n * The keys here are ISOBMFF box names. The values are the corresponding\n * bytes conversion for putting as an ISOBMFF boxes.\n *\n * Used by the boxName method.\n * @type {Object}\n */\n\n\nvar boxNamesMem = {};\n/**\n * Convert the string name of an ISOBMFF box into the corresponding bytes.\n * Has a memorization mechanism to speed-up if you want to translate the\n * same string multiple times.\n * @param {string} str\n * @returns {Uint8Array}\n */\n\nfunction boxName(str) {\n  if (boxNamesMem[str]) {\n    return boxNamesMem[str];\n  }\n\n  var nameInBytes = byte_parsing_1.strToBytes(str);\n  boxNamesMem[str] = nameInBytes;\n  return nameInBytes;\n}\n/**\n * Create a new ISOBMFF \"box\" with the given name.\n * @param {string} name - name of the box you want to create, must always\n * be 4 characters (uuid boxes not supported)\n * @param {Uint8Array} buff - content of the box\n * @returns {Uint8Array} - The entire ISOBMFF box (length+name+content)\n */\n\n\nfunction createBox(name, buff) {\n  var len = buff.length + 8;\n  return byte_parsing_1.concat(byte_parsing_1.itobe4(len), boxName(name), buff);\n}\n\nexports.createBox = createBox;\n/**\n * @param {string} name\n * @param {Array.<Uint8Array>} children\n * @returns {Uint8Array}\n */\n\nfunction createBoxWithChildren(name, children) {\n  return createBox(name, byte_parsing_1.concat.apply(byte_parsing_1, _toConsumableArray(children)));\n}\n\nexports.createBoxWithChildren = createBoxWithChildren;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":30,"column":4}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":30,"column":18}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":30,"column":21}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":30,"column":28}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":30,"column":29}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":30,"column":58}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":30,"column":59}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":42,"column":4}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":32,"column":17},"generated":{"line":42,"column":15}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":32,"column":56},"generated":{"line":42,"column":18}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":42,"column":20}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":51,"column":9}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":51,"column":16}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":41,"column":17},"generated":{"line":51,"column":17}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":51,"column":20}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":41,"column":29},"generated":{"line":51,"column":22}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":52,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":42,"column":6},"generated":{"line":52,"column":6}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":42,"column":17},"generated":{"line":52,"column":17}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":42,"column":18},"generated":{"line":52,"column":18}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":42,"column":17},"generated":{"line":52,"column":21}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":52,"column":22}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":42,"column":24},"generated":{"line":52,"column":24}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":53,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":43,"column":11},"generated":{"line":53,"column":11}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":43,"column":22},"generated":{"line":53,"column":22}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":43,"column":23},"generated":{"line":53,"column":23}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":43,"column":22},"generated":{"line":53,"column":26}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":53,"column":27}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":44,"column":3},"generated":{"line":54,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":56,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":46,"column":8},"generated":{"line":56,"column":6}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":46,"column":19},"generated":{"line":56,"column":17}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":56,"column":20}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":56,"column":34}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":56,"column":35}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":56,"column":45}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":46,"column":33},"generated":{"line":56,"column":46}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":56,"column":49}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":56,"column":50}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":57,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":57,"column":2}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":57,"column":13}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":47,"column":14},"generated":{"line":57,"column":14}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":57,"column":17}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":57,"column":18}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":47,"column":21},"generated":{"line":57,"column":21}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":57,"column":32}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":58,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":58,"column":9}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":58,"column":20}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":59,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":51,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":69,"column":9}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":69,"column":18}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":58,"column":19},"generated":{"line":69,"column":19}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":69,"column":23}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":58,"column":34},"generated":{"line":69,"column":25}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":69,"column":29}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":58,"column":51},"generated":{"line":69,"column":31}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":70,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":59,"column":8},"generated":{"line":70,"column":6}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":59,"column":11},"generated":{"line":70,"column":9}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":59,"column":14},"generated":{"line":70,"column":12}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":59,"column":18},"generated":{"line":70,"column":16}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":59,"column":19},"generated":{"line":70,"column":17}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":59,"column":14},"generated":{"line":70,"column":23}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":59,"column":28},"generated":{"line":70,"column":26}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":70,"column":27}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":71,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":71,"column":9}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":71,"column":23}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":71,"column":24}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":71,"column":30}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":16},"generated":{"line":71,"column":31}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":16},"generated":{"line":71,"column":45}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":16},"generated":{"line":71,"column":46}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":16},"generated":{"line":71,"column":52}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":23},"generated":{"line":71,"column":53}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":16},"generated":{"line":71,"column":56}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":71,"column":57}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":29},"generated":{"line":71,"column":59}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":36},"generated":{"line":71,"column":66}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":37},"generated":{"line":71,"column":67}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":36},"generated":{"line":71,"column":71}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":71,"column":72}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":44},"generated":{"line":71,"column":74}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":71,"column":78}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":71,"column":79}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":61,"column":1},"generated":{"line":72,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":74,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":74,"column":7}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":74,"column":8}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":74,"column":17}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":74,"column":20}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":74,"column":29}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":68,"column":9},"generated":{"line":81,"column":9}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":81,"column":30}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":81,"column":31}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":81,"column":35}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":70,"column":2},"generated":{"line":81,"column":37}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":81,"column":45}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":70,"column":25},"generated":{"line":81,"column":47}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":82,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":9},"generated":{"line":82,"column":9}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":18},"generated":{"line":82,"column":18}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":19},"generated":{"line":82,"column":19}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":18},"generated":{"line":82,"column":23}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":25},"generated":{"line":82,"column":25}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":25},"generated":{"line":82,"column":39}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":25},"generated":{"line":82,"column":40}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":25},"generated":{"line":82,"column":46}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":25},"generated":{"line":82,"column":53}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":25},"generated":{"line":82,"column":67}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":35},"generated":{"line":82,"column":88}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":25},"generated":{"line":82,"column":96}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":18},"generated":{"line":82,"column":98}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":82,"column":99}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":73,"column":1},"generated":{"line":83,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":85,"column":0}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":85,"column":7}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":85,"column":8}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":85,"column":29}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":85,"column":32}},{"source":"../../../parsers/containers/isobmff/create_box.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":85,"column":53}}],"sources":{"../../../parsers/containers/isobmff/create_box.ts":"/**\n * Copyright 2015 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  concat,\n  itobe4,\n  strToBytes,\n} from \"../../../utils/byte_parsing\";\n\n/**\n * Speed up string to bytes conversion by memorizing the result\n *\n * The keys here are ISOBMFF box names. The values are the corresponding\n * bytes conversion for putting as an ISOBMFF boxes.\n *\n * Used by the boxName method.\n * @type {Object}\n */\nconst boxNamesMem : { [boxName: string]: Uint8Array } = {};\n\n/**\n * Convert the string name of an ISOBMFF box into the corresponding bytes.\n * Has a memorization mechanism to speed-up if you want to translate the\n * same string multiple times.\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction boxName(str : string) : Uint8Array {\n  if (boxNamesMem[str]) {\n    return boxNamesMem[str];\n  }\n\n  const nameInBytes = strToBytes(str);\n  boxNamesMem[str] = nameInBytes;\n  return nameInBytes;\n}\n\n/**\n * Create a new ISOBMFF \"box\" with the given name.\n * @param {string} name - name of the box you want to create, must always\n * be 4 characters (uuid boxes not supported)\n * @param {Uint8Array} buff - content of the box\n * @returns {Uint8Array} - The entire ISOBMFF box (length+name+content)\n */\nfunction createBox(name : string, buff : Uint8Array) : Uint8Array {\n  const len = buff.length + 8;\n  return concat(itobe4(len), boxName(name), buff);\n}\n\n/**\n * @param {string} name\n * @param {Array.<Uint8Array>} children\n * @returns {Uint8Array}\n */\nfunction createBoxWithChildren(\n  name : string,\n  children : Uint8Array[]\n) : Uint8Array {\n  return createBox(name, concat(...children));\n}\n\nexport {\n  createBox,\n  createBoxWithChildren,\n};\n"},"lineCount":null}},"error":null,"hash":"7b097ec0effd566f735434aca69b222f","cacheData":{"env":{}}}