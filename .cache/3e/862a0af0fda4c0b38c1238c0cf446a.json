{"id":"../../../features/types.ts","dependencies":[{"name":"/home/prosset/Documents/Canal+/rx-player/tsconfig.json","includedInParent":true,"mtime":1567699906905},{"name":"/home/prosset/Documents/Canal+/rx-player/package.json","includedInParent":true,"mtime":1571390912278}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2015 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../../../features/types.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}}],"sources":{"../../../features/types.ts":"/**\n * Copyright 2015 CANAL+ Group\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from \"rxjs\";\nimport { ICustomSourceBuffer } from \"../compat\";\nimport {\n  IEMEManagerEvent,\n  IKeySystemOption,\n} from \"../core/eme\";\nimport {\n  IDirectfileEvent,\n  IDirectFileOptions,\n} from \"../core/init/initialize_directfile\";\nimport {\n  IHTMLTextTracksParserFn,\n  INativeTextTracksParserFn,\n} from \"../parsers/texttracks\";\nimport { ITransportFunction } from \"../transports\";\n\nexport type IDirectFileInit = (args : IDirectFileOptions) =>\n                                Observable<IDirectfileEvent>;\n\nexport type IEMEManager = (mediaElement : HTMLMediaElement,\n                           keySystems: IKeySystemOption[]) =>\n                             Observable<IEMEManagerEvent>;\n\nexport type INativeTextTracksBuffer =\n  new(mediaElement : HTMLMediaElement,\n      hideNativeSubtitle: boolean) => ICustomSourceBuffer<unknown>;\n\nexport type IHTMLTextTracksBuffer =\n  new(mediaElement : HTMLMediaElement,\n      textTrackElement: HTMLElement) => ICustomSourceBuffer<unknown>;\n\ninterface IBifThumbnail { index : number;\n                          duration : number;\n                          ts : number;\n                          data : Uint8Array; }\n\ninterface IImageTrackSegmentData {\n  data : IBifThumbnail[]; // image track data, in the given type\n  end : number; // end time time until which the segment apply\n  start : number; // start time from which the segment apply\n  timescale : number; // timescale to convert the start and end into seconds\n  type : string; // the type of the data (example: \"bif\")\n}\n\ninterface IBifObject { fileFormat : string;\n                       version : string;\n                       imageCount : number;\n                       timescale : number;\n                       format : string;\n                       width : number;\n                       height : number;\n                       aspectRatio : string;\n                       isVod : boolean;\n                       thumbs : IBifThumbnail[]; }\n\nexport type IImageBuffer = new() => ICustomSourceBuffer<IImageTrackSegmentData>;\n\nexport type IImageParser =\n  ((buffer : Uint8Array) => IBifObject);\n\n// interface of the global `features` object through which features are\n// accessed.\nexport interface IFeaturesObject {\n  transports : Partial<Record<string, ITransportFunction>>;\n  imageBuffer : IImageBuffer|null;\n  imageParser : IImageParser|null;\n  nativeTextTracksBuffer : INativeTextTracksBuffer|null;\n  nativeTextTracksParsers : Partial<Record<string, INativeTextTracksParserFn>>;\n  htmlTextTracksBuffer : IHTMLTextTracksBuffer|null;\n  htmlTextTracksParsers : Partial<Record<string, IHTMLTextTracksParserFn>>;\n  emeManager : IEMEManager|null;\n  directfile : IDirectFileInit|null;\n}\n\nexport type IFeatureFunction = (features : IFeaturesObject) => void;\n"},"lineCount":null}},"error":null,"hash":"8278abe27e812c432e3e32b81231a013","cacheData":{"env":{}}}