"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("../util");
var primitives_1 = require("../primitives");
function getParser(_a) {
    var _b = (_a === void 0 ? {} : _a).startLine, startLine = _b === void 0 ? 0 : _b;
    var block = null;
    var num = startLine;
    return function parseSource(source) {
        var _a, _b, _c;
        var rest = source;
        var tokens = util_1.seedTokens();
        _a = util_1.splitSpace(rest), tokens.start = _a[0], rest = _a[1];
        if (block === null &&
            rest.startsWith(primitives_1.Markers.start) &&
            !rest.startsWith(primitives_1.Markers.nostart)) {
            block = [];
            tokens.delimiter = rest.slice(0, primitives_1.Markers.start.length);
            rest = rest.slice(primitives_1.Markers.start.length);
            _b = util_1.splitSpace(rest), tokens.postDelimiter = _b[0], rest = _b[1];
        }
        if (block === null) {
            num++;
            return null;
        }
        var isClosed = rest.trimRight().endsWith(primitives_1.Markers.end);
        if (tokens.delimiter === '' &&
            rest.startsWith(primitives_1.Markers.delim) &&
            !rest.startsWith(primitives_1.Markers.end)) {
            tokens.delimiter = primitives_1.Markers.delim;
            rest = rest.slice(primitives_1.Markers.delim.length);
            _c = util_1.splitSpace(rest), tokens.postDelimiter = _c[0], rest = _c[1];
        }
        if (isClosed) {
            var trimmed = rest.trimRight();
            tokens.end = rest.slice(trimmed.length - primitives_1.Markers.end.length);
            rest = trimmed.slice(0, -primitives_1.Markers.end.length);
        }
        tokens.description = rest;
        block.push({ number: num, source: source, tokens: tokens });
        num++;
        if (isClosed) {
            var result = block.slice();
            block = null;
            return result;
        }
        return null;
    };
}
exports.default = getParser;
