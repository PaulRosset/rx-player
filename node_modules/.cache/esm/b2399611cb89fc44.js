let EncryptedMediaError,ErrorTypes,MediaError,NetworkError,OtherError;_cb8‍.x([["default",()=>isKnownError]]);_cb8‍.w("./encrypted_media_error",[["default",["EncryptedMediaError"],function(v){EncryptedMediaError=v}]]);_cb8‍.w("./error_codes",[["ErrorTypes",["ErrorTypes"],function(v){ErrorTypes=v}]]);_cb8‍.w("./media_error",[["default",["MediaError"],function(v){MediaError=v}]]);_cb8‍.w("./network_error",[["default",["NetworkError"],function(v){NetworkError=v}]]);_cb8‍.w("./other_error",[["default",["OtherError"],function(v){OtherError=v}]]);/**
 * Copyright 2015 CANAL+ Group
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





/**
 * Whether the error given is a ICustomError.
 * @param {Error} error
 * @returns {Boolean}
 */
               function isKnownError(error) {
    return (error instanceof EncryptedMediaError ||
        error instanceof MediaError ||
        error instanceof OtherError ||
        error instanceof NetworkError) &&
        Object.keys(ErrorTypes).indexOf(error.type) >= 0;
}
