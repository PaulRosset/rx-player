let base64ToBytes,le2toi,bytesToHex,guidToUuid,utf16LEToStr;_27a‍.x([["getPlayReadyKIDFromPrivateData",()=>getPlayReadyKIDFromPrivateData]]);_27a‍.w("../../../../utils/base64",[["base64ToBytes",["base64ToBytes"],function(v){base64ToBytes=v}]]);_27a‍.w("../../../../utils/byte_parsing",[["le2toi",["le2toi"],function(v){le2toi=v}]]);_27a‍.w("../../../../utils/string_parsing",[["bytesToHex",["bytesToHex"],function(v){bytesToHex=v}],["guidToUuid",["guidToUuid"],function(v){guidToUuid=v}],["utf16LEToStr",["utf16LEToStr"],function(v){utf16LEToStr=v}]]);/**
 * Copyright 2015 CANAL+ Group
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



/**
 * Parse PlayReady privateData to get its Hexa-coded KeyID.
 * @param {Uint8Array} privateData
 * @returns {string}
 */
       function getPlayReadyKIDFromPrivateData(data) {
    var xmlLength = le2toi(data, 8);
    var xml = utf16LEToStr(data.subarray(10, xmlLength + 10));
    var doc = new DOMParser().parseFromString(xml, "application/xml");
    var kidElement = doc.querySelector("KID");
    if (kidElement === null) {
        throw new Error("Cannot parse PlayReady private data: invalid XML");
    }
    var b64guidKid = kidElement.textContent === null ? "" :
        kidElement.textContent;
    var uuidKid = guidToUuid(base64ToBytes(b64guidKid));
    return bytesToHex(uuidKid).toLowerCase();
}
