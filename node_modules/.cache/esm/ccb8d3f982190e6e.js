let observableOf,take,READY_STATES,onLoadedMetadata$;_821‍.x([["default",()=>whenLoadedMetadata$]]);_821‍.w("rxjs",[["of",["observableOf"],function(v){observableOf=v}]]);_821‍.w("rxjs/operators",[["take",["take"],function(v){take=v}]]);_821‍.w("./browser_compatibility_types",[["READY_STATES",["READY_STATES"],function(v){READY_STATES=v}]]);_821‍.w("./event_listeners",[["onLoadedMetadata$",["onLoadedMetadata$"],function(v){onLoadedMetadata$=v}]]);/**
 * Copyright 2015 CANAL+ Group
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */




/**
 * Returns an observable emitting a single time, as soon as a seek is possible
 * (the metadata are loaded).
 * @param {HTMLMediaElement} mediaElement
 * @returns {Observable}
 */
               function whenLoadedMetadata$(mediaElement) {
    if (mediaElement.readyState >= READY_STATES.HAVE_METADATA) {
        return observableOf(null);
    }
    else {
        return onLoadedMetadata$(mediaElement)
            .pipe(take(1));
    }
}
